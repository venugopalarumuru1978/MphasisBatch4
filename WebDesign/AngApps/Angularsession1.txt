Today's Agenda
--------------
Angular
    Intro
    Components
    Data Bindings
---------------
What is an Angular?
    It is a client side framework, which is used to create web applications. 
It provides a skeleton of the project whenever we create application.

It follows a structure called SPA(Single Page Application).
It works with TypeScript.
It is a open-source, so that we can use freely with NPM and Client Side CLI. 

It can be used in combination  with any server side platform such as Java, Asp.net, Php, pYthon, etc
It is a cross-platform i.e.  it works on any operating system. 

We have different versions of Angular 2.0 ..... 10, 11,...
latest version of Angular 17.3.9

How to install Angular :- 

1.  Install NPM(comes with Node JS)
2.  Install TypeScript
3.  Install Angular with following command
	npm install @angular/cli -g   // it always install latest version of Angular. 

	npm install -g angular-cli@16.2.0  // it is meant for specific version

How to uninstall existing angular  then install specific version of angular
	npm uninstall -g angular-cli
	npm cache clean
	npm install -g angular-cli@16.2.0

How to create an angular application?
	Goto Command Prompt, then use following command
		ng new <application name>

How to run an Angular Application
	1.  goto command prompt and enter into application folder by follwoing command
		cd  ApplicationFolderName

	2.  Use below given command
		ng serve

Once application is started, then it works with a port number 4200.
	so that use follwing url on browser to get output
		http://localhost:4200/

Note :-  To stop application execution 
		"Ctrl + C" has to used

What is an Component?
A  Component is a unit of angular where it a set of files for different purposes.
Angular having collection of components. A component is a combination different files as follows
		An Html Page for Structure(Desinging) - (.html)
		An CSS Page for Styling - (.css)
		An TypeScript page for Script code - (.ts)
		An Testing page for Test the code - (.spec.ts)

use following command to create a component
		ng g component <component name>
------------------
Data Bindings:-

it is a relation b/w typescript  and html page. It is mainly used for data bindings of variables declared as well as methods defined in "ts" files.

it can be done in 4 ways

1.  Interpolation Bindings
2.  Property Binding
3.  Event Binding
4.  Two - Way Binding

1. Interpolation :- 
		It is the process of showing typescript variable value in html page. 
			use below given syntax in html page
				{{variable name}}
2. Property Binding :- 
		It is the process of binding a value to the specific attribute of the html tag. 
		<tag  [attributename] = "variable" /></tag>

	<a href="pagename" ... />  here "href" is a property
	<img src="file name"  width="..."  height="..." alt="..." />  
				here   "src, width, height, alt, ...." are the properties
 
3. Event Binding :-  It is the process of adding events to the html elements
		<tag  (eventname) = "method name" />

4. Two way Binding :- 
		It is the process of binding a variable to any element and it is having reflection b/w variable and an element. i.e.  if we change value in element, that automatically reflected in variable and vice versa. 
			here we have to use "ngModel" directive for the html tag. 

			<tag  [(ngModel)] = "variable" />

		here we have to import a package in app.modules.ts file
				"FormsModule"
------------------
Directives :- 

these are angular keywords which can be used different purposes. These all are used in  Html Pages only. 

these are starts with "ngDirectiveName"

ngModel
ngClass
ngFor
ngIf
ngSwitch
--------------------
ngClass :-  it is used to assign css classes as variable to the html elements.

ngIf :-  It is used to check condition in html page. 

	<tag  *ngIf="Condition">
		content
	</tag>

ngIf-else 

<tag *ngIf="condition; then template1;else template2">
</tag>

here template1 and template2 are the containers where some info has to defined. it has to done with 
ng-template tag. 

<ng-template #templatename>
	content
</ng-template>
-------------------
ngFor :-  it is meant for looping process. 

<tag  *ngFor="let var of arrayVariable">
</tag>
---------------------
ngSwitch :- 

<tag  [ngSwitch]="variable">
	<tag *ngSwitchCase=" 'value-1' "/>
	<tag *ngSwitchCase=" 'value-2' "/>
	....
	<tag *ngSwitchCase=" 'value-n' "/>
	<tag *ngSwitchDefault/>
</tag>


How to create a class?
	ng g class <classname>

--------------------------------
Routing :-  It is the concept of navigating pages within the webapplication. 

Steps

1.  import @angular/router package

2.  Create Routes(set of links for components)  in app-routing.modules.ts file
	var  variable:Routes = [
	{path:"Link Text", component:ComponentName},
	{path:"Link Text", component:ComponentName},
	{path:"Link Text", component:ComponentName},
	.............
	]

3. Add these routes into RouterModule class as follows
	var variable2 =  RouterModule.forRoot(variable)

4. Create a placeholder to display route/page content in app.component.html
	<router-outlet> </router-outlet>

5. Now create a hyperlink for every route as follows  in  app.component.html
	<a routerLink="Link Text">Link</a>
-------------
Router :-  this class object is used to navigate component dynamically based on events. 

Steps
1.  Import Router Class from @angular/router
2.  Create an object Router Class as a constructor parameter. 
3.  with that object, we can navigate page as follows
		this.routerObject.navigate(['/linktext']);
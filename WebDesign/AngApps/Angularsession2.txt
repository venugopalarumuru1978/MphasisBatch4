Today's Agenda
--------------
Routing
Pipes
Forms
---------------
Routing :-  It is the concept of navigating page within the webapplication. 

Steps

1.  import @angular/router package

2.  Create Routes(set of links for components)  in app-routing.modules.ts file
	var  variable:Routes = [
	{path:"Link Text", component:ComponentName},
	{path:"Link Text", component:ComponentName},
	{path:"Link Text", component:ComponentName},
	.............
	]

3. Add these routes into RouterModule class as follows
	var variable2 =  RouterModule.forRoot(variable)

4. Now create a hyperlink for every route as follows
	<a routerLink="Link Text">Link</a>
5. Create a placeholder to display route/page content
	<router-outlet> </router-outlet>
-------------
Router :-  this class object is used to navigate component dynamically based on events. 

Steps
1.  Import Router Class from @angular/router
2.  Create an object Router Class as a constructor parameter. 
3.  with that object, we can navigate page as follows
		this.routerObject.navigate(['/linktext']);
-----------
How to add a value / an object to the array?
		by using Push() method we can add a value / an object. 
How to delete a value/ an object from an array?
		by using splice() method we can delete a value / an object. 
				splice(index, no of values)
--------------------------
ng add  @ng-bootstrap/ng-bootstrap 
---------------------------
Pipes :- these are used to transform the value presentation on html page. 
		{{variable|pipename}}
lowercase
uppercase
currency
{{emp.salary|currency:"INR"}}  = indian 
{{emp.salary|currency:"USD"}}  = US dollor
{{emp.salary|currency:"EUR"}}  = Euros
{{emp.salary|currency:"GBP"}}  = Briton Dollor
date
{{dinfo|date:"longDate"}}
{{dinfo|date:"shortDate"}}
{{dinfo|date:"fullDate"}}
{{dinfo|date:"d-M-y"}}
{{dinfo|date:"h:m:s"}} - time
json
percent   (0.1 to 1.0)    0.1 = 10% ...  1 - 100%
slice
number
---------------------------
Forms & Validations:- 
As per angular, there are two types of forms 

1. Template Driven Forms
2. Reactive Driven Forms

Template Driven Forms :- 
these  forms normal form regularly creating using html, for that form by using anuglar we can apply validations. 

this type of forms are useful whenever creating simple forms like Login, Feedback, Contact .....

to create any type of forms first we have import "FormsModule". 

------------------------
Reactive Driven Forms :- 

These forms are newly added forms into angular. 
Here form creation will be done in typescript file later html control created. 

1.  Import a Module called as "ReactiveFormsModule"
2.  To represent each field  user following classes 
		FormControl, FormGroup, FormBuild classes are used to hold group of controls. 
3.  To specify validations, use "Validators" class

For Validation purpose for Both Template & Reactive Driven Forms:-

touched 
	true  :  field focused
	false :  field not focused

untouched 
	true  :  field not focused
	false :  field  focused

pristine 
	true  :  field not modified by the user
	false :  field modified  by the user

valid 
	true :  field value is valid
	false:  field value not valid

invalid 
	true :  field value not valid
	false:  field value  valid

^[0-9]*$ = Only Numbers
^[a-zA-Z]*$ = only alphabets
------------
To get BootStrap
ng add @ng-bootstrap/ng-bootstrap